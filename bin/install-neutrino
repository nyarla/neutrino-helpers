#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long qw( :config posix_default no_ignore_case bundling );

use Pod::Usage qw( pod2usage );
use File::Temp qw( tempdir );

my $prefix = $ENV{'NEUTRINO_PREFIX'} // $ENV{'HOME'} . '/.local/share/neutrino';

my $VERSION = "v0.1.0";

sub which {
  my $cmd = shift;
  my $path = `which '${cmd}'`;

  chomp($path);

  return undef if ($path eq q{});
  return $path;
}

sub testing_which {
  my $cmd = which('which');

  like( $cmd, qr{/which$} );

  $cmd = which('');

  is($cmd, undef);
}

sub unzip {
    my $zip  = shift;
    my $dest = shift;

    if ( !-e $zip ) {
        die "zip file does not found: ${zip}";
    }

    system( qw(unzip -d), $dest, $zip ) == 0;
}

sub install_neutrino {
    my $zip    = shift;
    my $tmpdir = tempdir( CLEANUP => 1 );

    unzip( $zip, $tmpdir );

    if ( !-e "${tmpdir}/NEUTRINO" ) {
        print STDERR "this zip file is not NEUTRINO-Online.zip\n";
        return !!0;
    }

    if ( !-e "${prefix}/dist" ) {
        system( qw(mkdir -p), "${prefix}/dist" );
    }

    return system( qw(cp -R), "${tmpdir}/NEUTRINO/", "${prefix}/dist/" ) == 0;
}

sub install_model {
    my $zip    = shift;
    my $tmpdir = tempdir( CLEANUP => 1 );

    unzip( $zip, $tmpdir );
    if ( system( qq( bash -c 'ls "${tmpdir}"| grep NEUTRINO-Library' ) ) != 0) {
        print STDERR "this zip file is not NEUTRINO Library zip\n";
        return !!0;
    }

    if ( !-e "${prefix}/dist/NEUTRINO" ) {
      print STDERR "NEUTRINO does not installed yet. Please install NEUTRINO first.\n";
      return !!0;
    }

    return system(qq( bash -c 'cp -R "${tmpdir}"/*/* "${prefix}"/dist/NEUTRINO/model/' )) == 0;
}

sub main {
    local @ARGV = @_;

    if ( @ARGV == 0 ) {
        pod2usage( -exitval => 1, -verbose => 1 );
    }

    my $neutrino;
    my @models;

    GetOptions(
        "neutrino|n=s" => \$neutrino,
        "model|m=s"    => \@models,
        "version|v" => sub {
          print "install-neutrino - ${VERSION}", "\n";
          exit 0;
        },
        "help|h" => sub {
          pod2usage(-exitval => 0, -verbose =>1);
        },
    ) or pod2usage( -exitval => 1, -verbose => 1 );

    if ( !-d $prefix ) {
        system( qw(mkdir -p), $prefix );
    }

    if ( $neutrino ne q{} ) {
        local $@; eval {
          install_neutrino($neutrino);
        };
        
        if ($@) {
          print STDERR "failed to install NEUTRINO from '${neutrino}': ${@}\n";
          exit 1;
        }

        for my $bin (qw(NEUTRINO NSF WORLD musicXMLtoLabel)) {
          local $!;
          my $result = system(qq(sh -c 'chmod +x "${prefix}/dist/NEUTRINO/bin/${bin}"'));
          if ($result != 0) {
            print STDERR "failed to set executable flag to ${bin} file: ${$!}\n";
            exit 1;
          }
        }
    }

    if ( @models > 0 ) {
        for my $model (@models) {
          local $@;
          eval {
            install_model($model);
          };

          if ($@) {
            print STDERR "failed to install NEUTRINO model from '${model}': ${@}\n";
            exit 1;
          }
        }
    }

    return 0;
}

sub testing {
  eval {
    use Test::More;

    testing_which;

    done_testing;
  };
}

(!! $ENV{'HARNESS_ACTIVE'} ? testing(@ARGV) : main(@ARGV));

=encoding utf-8

=head1 NAME

install-neutrino - Installer script for NEUTRINO AI Singing Synthizer.

=head1 USAGE

  # install NEUTRINO
  $ install-neutrino -n ~/Downloads/NEUTRINO-Online.zip

  # install NEUTRINO models
  $ install-neutrino -m ~/Downloads/"No.7（NEUTRINO-Library）.zip"

=head1 OPTIONS

=head2 -n or --neutrino

Install NEUTRINO VI Singing Synthizer from local zip file.

=head2 -m or --model

Install NEUTRINO Models from local zip file.

=head1 SEE ALSO

L<https://n3utrino.work/>

L<https://github.com/nyarla/neutrino-helpers/>

=head1 AUTHOR OF THIS SCRIPT

OKAMURA Naoki aka nyarla E<lt>nyarla@kalaclista.comE<gt>

=head1 LICENSE

This script is same license of perl itself.

=cut
